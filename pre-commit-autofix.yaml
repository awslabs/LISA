# Source: https://gitlab.com/yesolutions/gitlab-ci-templates
pre-commit:
  stage: .pre
  rules:
    - if: '$PRE_COMMIT_SKIP_BRANCH_PIPELINE && $CI_COMMIT_BRANCH'
      when: never
    - if: '$PRE_COMMIT_SKIP_MR_PIPELINE && $CI_PIPELINE_SOURCE == "merge_request_event"'
      when: never
    - if: '$PRE_COMMIT_AUTO_FIX_BRANCH_ONLY && $CI_PIPELINE_SOURCE == "merge_request_event"'
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      when: on_success
      exists:
        - .pre-commit-config.yaml
    - if: '$PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH == "true" && $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS'
      when: never
    - if: '$PRE_COMMIT_AUTO_FIX_MR_ONLY && $CI_PIPELINE_SOURCE != "merge_request_event"'
      variables:
        PRE_COMMIT_AUTO_FIX: ''
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE != "detached"'
      variables: # we don't support autofix for merged_result or merge_train pipelines, configure branch fixing instead
        PRE_COMMIT_AUTO_FIX: ''
      exists:
        - .pre-commit-config.yaml
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - if: '$CI_COMMIT_BRANCH'
      exists:
        - .pre-commit-config.yaml
      when: on_success
    - when: never

  variables:
    PRE_COMMIT_AUTO_FIX: '1'
    PRE_COMMIT_DEDUPLICATE_MR_AND_BRANCH: 'true'
    PRE_COMMIT_HOME: .pre-commit-cache
  cache:
    - key:
        files: [.pre-commit-config.yaml]
      paths: [.pre-commit-cache]
  image: node:latest
  before_script:
    - apt-get update
    - apt-get install -y python3 python3-pip python3-venv
    - python3 -m venv .venv && source .venv/bin/activate
    - pip3 install pre-commit
    - apt-get install -y jq
    - pip3 install yq
    - npm install
  script: |
    if [[ -n "$PRE_COMMIT_AUTO_FIX_BRANCH_ONLY" && -n "$PRE_COMMIT_AUTO_FIX_MR_ONLY" ]]; then
        echo "invalid configuration. PRE_COMMIT_AUTO_FIX_BRANCH_ONLY and PRE_COMMIT_AUTO_FIX_MR_ONLY are mutually exclusive"
        exit 1
    fi

    if [[ $PRE_COMMIT_DEBUG ]]; then
        set -x
        echo "DEBUGGING ENABLED" > /dev/stderr
    fi

    status=0
    pre-commit run --all-files || status=$?
    if [[ -n "$PRE_COMMIT_DEBUG" ]]; then
        git status
    fi
    if [[ $status -ne 0 ]]; then
        if [[ -n "$CI_COMMIT_BRANCH" ]]; then
            git remote set-url origin "https://gitlab-ci-token:${PRE_COMMIT_ACCESS_TOKEN:-$CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
            git fetch origin
            git checkout $CI_COMMIT_BRANCH
            if [[ -n "$PRE_COMMIT_DEBUG" ]]; then
                git status
            fi
        fi
        if [[ -n "$CI_MERGE_REQUEST_IID" ]]; then
            git remote set-url origin "https://gitlab-ci-token:${PRE_COMMIT_ACCESS_TOKEN:-$CI_JOB_TOKEN}@${CI_SERVER_HOST}/${CI_MERGE_REQUEST_SOURCE_PROJECT_PATH}.git"
            git fetch origin
            if [[ -n "$PRE_COMMIT_DEBUG" ]]; then
                git status
            fi
        fi
        pre-commit run --all-files  # check the status passes now with autofix otherwise, it'll bail here
    else
        exit 0  # we're all good, pipeline can proceed
    fi

    if [[ -z "$PRE_COMMIT_AUTO_FIX" ]]; then
        exit 1 # fail the job
    fi

    # TODO: make email/username configurable
    git config --global user.email "$GITLAB_USER_EMAIL"
    git config --global user.name "pre-commit fix $GITLAB_USER_NAME"
    if [[ -n "$PRE_COMMIT_DEBUG" ]]; then
        git status
    fi
    # proceed with auto-fix

    if [[ -z "$PRE_COMMIT_ACCESS_TOKEN" ]]; then
        echo "Auto-fix is enabled, but no pre-commit access token found." >> /dev/stderr
        echo "To enable automatic fixes, please create a project access token with repository write scope and set the PRE_COMMIT_ACCESS_TOKEN variable" > /dev/stderr
        exit 1
    fi

    if [[ -n "$CI_COMMIT_BRANCH" ]]; then
        git add -u .
        if [[ -n "$PRE_COMMIT_DEBUG" ]]; then
            git status
        fi
        git commit -m "auto fixes from pre-commit CI job" -m "job url: $CI_JOB_URL"
        git push
        exit 1
    elif [[ -n "$CI_MERGE_REQUEST_IID" ]]; then
        git add -u .
        if [[ -n "$PRE_COMMIT_DEBUG" ]]; then
            git status
        fi
        git commit -m "auto fixes from pre-commit CI job" -m "job url: $CI_JOB_URL"
        git push origin HEAD:"$CI_MERGE_REQUEST_SOURCE_BRANCH_NAME"
        exit 1
    else
       echo "Auto fix is not supported in this context" > /dev/stderr
       echo "Auto fix is only available in branch and merge request pipelines" > /dev/stderr
       exit 1
    fi
