name: Deploy Demo Environment
on:
  push:
    branches: [ "main"]

permissions:
  id-token: write
  contents: read

jobs:
  CheckPendingWorkflow:
    runs-on: ubuntu-latest
    steps:
      - uses: ahmadnassri/action-workflow-queue@233f6a0b2d7ca482c267a9616fb77b71e6651bb3 # v1.1.5
        with:
          delay: 300000
          timeout: 7200000
  DeployLISA:
    needs: CheckPendingWorkflow
    environment: demo
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT }}:role/${{ vars.ROLE_NAME_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          role-duration-seconds: 14400
      - name: Create config-custom.yaml
        id: create-yaml
        run: |
          echo "${{vars.CONFIG_YAML}}" > config-custom.yaml
      - name: Set up Python 3.11
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5.2.0
        with:
          python-version: "3.11"
      - name: Use Node.js 20.x
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: 20.x
      - name: Install CDK dependencies
        run: |
          npm ci
      - name: Deploy LISA
        run: |
          make deploy HEADLESS=true
  SendSlackNotification:
    name: Send Slack Notification
    needs: [ DeployLISA ]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Notification that Demo Deploy Finished
        uses: rtCamp/action-slack-notify@4e5fb42d249be6a40e8ac1e7cdefc3e00b9f43c9 # v2.3.0
        env:
          SLACK_WEBHOOK: ${{ secrets.INTERNAL_DEV_SLACK_WEBHOOK_URL }}
          SLACK_COLOR: ${{ contains(join(needs.*.result, ' '), 'failure') && 'failure' || 'success' }}
          SLACK_TITLE: 'Demo Deploy Finished'
          SLACK_FOOTER: ''
          MSG_MINIMAL: 'actions url,commit'
          SLACK_MESSAGE_ON_FAILURE: '<!here> Demo Deploy FAILED on branch ${{ github.head_ref || github.ref_name }} for <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|commit>'
          SLACK_MESSAGE_ON_SUCCESS: 'Demo Deploy SUCCESS on branch ${{ github.head_ref || github.ref_name }} for <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|commit>.'
          SLACK_MESSAGE: 'Demo Deploy Finished with status ${{ job.status }} on branch ${{ github.head_ref || github.ref_name }} for <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|commit>'
